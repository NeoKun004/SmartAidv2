import streamlit as st

def show_page():
    """Display the questionnaire page for screening neurodevelopmental disorders"""
    st.title("üìã Questionnaire de D√©pistage des Troubles Neurod√©veloppementaux")
    
    # Introduction stylis√©e
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-bottom: 20px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); border: 3px solid #5D5FEF;">
        <h3 style="color: #5D5FEF; text-align: center;">üëã Bienvenue au questionnaire</h3>
        <p style="font-size: 1.1rem; text-align: center;">
            Ce questionnaire nous aidera √† mieux comprendre les forces et les besoins de l'enfant.
            Vos r√©ponses sont importantes pour nous permettre d'adapter les activit√©s et les conseils.
        </p>
    </div>
    """, unsafe_allow_html=True)
    
    # Informations g√©n√©rales
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-bottom: 20px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
        <h3 style="color: #FF6B6B; text-align: center;">üìù Informations g√©n√©rales</h3>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns(3)
    with col1:
        nom_prenom = st.text_input("Nom et Pr√©nom de l'enfant", key="questionnaire_nom")
    with col2:
        age = st.number_input("√Çge", min_value=2, max_value=18, value=6, key="questionnaire_age")
    with col3:
        classe = st.text_input("Classe", key="questionnaire_classe")
    
    # Correction : Initialiser les r√©ponses correctement si non existantes ou si c'est None
    if 'questionnaire_responses' not in st.session_state or st.session_state['questionnaire_responses'] is None:
        st.session_state['questionnaire_responses'] = {
            "sphereA": {},
            "sphereB": {},
            "sphereC": {},
            "sphereD": {},
            "sphereE": {},
            "info": {}
        }
    
    # SPH√àRE A - Attention / Hyperactivit√© / Impulsivit√©
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-bottom: 20px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
        <h3 style="color: #4ECDC4; text-align: center;">üß† SPH√àRE A - Attention / Hyperactivit√© / Impulsivit√©</h3>
    </div>
    """, unsafe_allow_html=True)
    
    # Question 1
    st.markdown("**1. L'enfant a du mal √† rester concentr√© longtemps, m√™me sur une activit√© de loisir.**")
    col1, col2 = st.columns([3, 2])
    with col1:
        q1 = st.radio(
            "R√©ponse:", 
            ["OUI", "Rarement", "NON"], 
            key="q1_sphere_a",
            horizontal=True
        )
    with col2:
        q1_comment = st.text_input("Commentaire:", key="q1_comment_a")
    
    # Stocker les r√©ponses
    st.session_state['questionnaire_responses']["sphereA"]["q1"] = {
        "answer": q1,
        "comment": q1_comment
    }
    
    # Question 2
    st.markdown("**2. Il oublie fr√©quemment certaines choses du quotidien (cahiers, clefs...) ou perd r√©guli√®rement ses affaires.**")
    col1, col2 = st.columns([3, 2])
    with col1:
        q2 = st.radio(
            "R√©ponse:", 
            ["OUI", "Rarement", "NON"], 
            key="q2_sphere_a",
            horizontal=True
        )
    with col2:
        q2_comment = st.text_input("Commentaire:", key="q2_comment_a")
    
    # Stocker les r√©ponses
    st.session_state['questionnaire_responses']["sphereA"]["q2"] = {
        "answer": q2,
        "comment": q2_comment
    }
    
    # Question 3
    st.markdown("**3. Il est facilement distrait par ce qui se passe autour de lui.**")
    col1, col2 = st.columns([3, 2])
    with col1:
        q3 = st.radio(
            "R√©ponse:", 
            ["OUI", "Rarement", "NON"], 
            key="q3_sphere_a",
            horizontal=True
        )
    with col2:
        q3_comment = st.text_input("Commentaire:", key="q3_comment_a")
    
    # Stocker les r√©ponses
    st.session_state['questionnaire_responses']["sphereA"]["q3"] = {
        "answer": q3,
        "comment": q3_comment
    }
    
    # Question 4
    st.markdown("**4. Il a des difficult√©s √† attendre son tour (parole, jeux...).**")
    col1, col2 = st.columns([3, 2])
    with col1:
        q4 = st.radio(
            "R√©ponse:", 
            ["OUI", "Rarement", "NON"], 
            key="q4_sphere_a",
            horizontal=True
        )
    with col2:
        q4_comment = st.text_input("Commentaire:", key="q4_comment_a")
    
    # Stocker les r√©ponses
    st.session_state['questionnaire_responses']["sphereA"]["q4"] = {
        "answer": q4,
        "comment": q4_comment
    }
    
    # Question 5
    st.markdown("**5. Il est souvent en mouvement (se l√®ve en classe, bouge beaucoup √† la maison).**")
    col1, col2 = st.columns([3, 2])
    with col1:
        q5 = st.radio(
            "R√©ponse:", 
            ["OUI", "Rarement", "NON"], 
            key="q5_sphere_a",
            horizontal=True
        )
    with col2:
        q5_comment = st.text_input("Commentaire:", key="q5_comment_a")
    
    # Stocker les r√©ponses
    st.session_state['questionnaire_responses']["sphereA"]["q5"] = {
        "answer": q5,
        "comment": q5_comment
    }
    
    # SPH√àRE B - Langage Oral
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-bottom: 20px; margin-top: 30px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
        <h3 style="color: #5D5FEF; text-align: center;">üó£Ô∏è SPH√àRE B - Langage Oral</h3>
    </div>
    """, unsafe_allow_html=True)
    
    # Questions 6-9 (structure similaire)
    questions_b = [
        "6. L'enfant a des difficult√©s √† comprendre le sens des conversations.",
        "7. Il montre des difficult√©s pour trouver les mots justes (manque du mot).",
        "8. Il a des difficult√©s √† raconter une histoire de mani√®re coh√©rente.",
        "9. Il se fait souvent reprendre pour la structure incorrecte de ses phrases."
    ]
    
    for i, question in enumerate(questions_b, 6):
        q_key = f"q{i}"
        st.markdown(f"**{question}**")
        col1, col2 = st.columns([3, 2])
        with col1:
            response = st.radio(
                "R√©ponse:", 
                ["OUI", "Rarement", "NON"], 
                key=f"{q_key}_sphere_b",
                horizontal=True
            )
        with col2:
            comment = st.text_input("Commentaire:", key=f"{q_key}_comment_b")
        
        # Stocker les r√©ponses
        st.session_state['questionnaire_responses']["sphereB"][q_key] = {
            "answer": response,
            "comment": comment
        }
    
    # SPH√àRE C - Langage √âcrit
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-bottom: 20px; margin-top: 30px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
        <h3 style="color: #FF6B6B; text-align: center;">üìù SPH√àRE C - Langage √âcrit</h3>
    </div>
    """, unsafe_allow_html=True)
    
    # Questions 10-12
    questions_c = [
        "10. Il montre des difficult√©s √† comprendre ce qu'il lit.",
        "11. Il fait beaucoup de fautes d'orthographe et √©crit parfois un m√™me mot de plusieurs mani√®res.",
        "12. Il est lent dans la copie ou la prise de notes."
    ]
    
    for i, question in enumerate(questions_c, 10):
        q_key = f"q{i}"
        st.markdown(f"**{question}**")
        col1, col2 = st.columns([3, 2])
        with col1:
            response = st.radio(
                "R√©ponse:", 
                ["OUI", "Rarement", "NON"], 
                key=f"{q_key}_sphere_c",
                horizontal=True
            )
        with col2:
            comment = st.text_input("Commentaire:", key=f"{q_key}_comment_c")
        
        # Stocker les r√©ponses
        st.session_state['questionnaire_responses']["sphereC"][q_key] = {
            "answer": response,
            "comment": comment
        }
    
    # SPH√àRE D - Motricit√© et Rep√©rage Spatial
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-bottom: 20px; margin-top: 30px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
        <h3 style="color: #4ECDC4; text-align: center;">ü§∏ SPH√àRE D - Motricit√© et Rep√©rage Spatial</h3>
    </div>
    """, unsafe_allow_html=True)
    
    # Questions 13-15
    questions_d = [
        "13. Il a du mal avec les activit√©s n√©cessitant de la coordination (sport, utilisation d'outils comme les ciseaux, le compas...).",
        "14. Il est maladroit (se cogne souvent, renverse des objets).",
        "15. Il a des difficult√©s √† se rep√©rer dans l'espace (perte de rep√®res dans un lieu connu)."
    ]
    
    for i, question in enumerate(questions_d, 13):
        q_key = f"q{i}"
        st.markdown(f"**{question}**")
        col1, col2 = st.columns([3, 2])
        with col1:
            response = st.radio(
                "R√©ponse:", 
                ["OUI", "Rarement", "NON"], 
                key=f"{q_key}_sphere_d",
                horizontal=True
            )
        with col2:
            comment = st.text_input("Commentaire:", key=f"{q_key}_comment_d")
        
        # Stocker les r√©ponses
        st.session_state['questionnaire_responses']["sphereD"][q_key] = {
            "answer": response,
            "comment": comment
        }
    
    # SPH√àRE E - Fonctionnement Ex√©cutif
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-bottom: 20px; margin-top: 30px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
        <h3 style="color: #5D5FEF; text-align: center;">üß© SPH√àRE E - Fonctionnement Ex√©cutif</h3>
    </div>
    """, unsafe_allow_html=True)
    
    # Questions 16-18
    questions_e = [
        "16. Il a du mal √† suivre une consigne longue et ne retient que le d√©but ou la fin.",
        "17. Il pose plusieurs fois les m√™mes questions m√™me apr√®s avoir re√ßu une r√©ponse.",
        "18. Il a du mal √† s'adapter √† une nouvelle situation et pers√©v√®re dans ses erreurs."
    ]
    
    for i, question in enumerate(questions_e, 16):
        q_key = f"q{i}"
        st.markdown(f"**{question}**")
        col1, col2 = st.columns([3, 2])
        with col1:
            response = st.radio(
                "R√©ponse:", 
                ["OUI", "Rarement", "NON"], 
                key=f"{q_key}_sphere_e",
                horizontal=True
            )
        with col2:
            comment = st.text_input("Commentaire:", key=f"{q_key}_comment_e")
        
        # Stocker les r√©ponses
        st.session_state['questionnaire_responses']["sphereE"][q_key] = {
            "answer": response,
            "comment": comment
        }
    
    # Stocker les informations g√©n√©rales
    st.session_state['questionnaire_responses']['info'] = {
        "nom": nom_prenom,
        "age": age,
        "classe": classe
    }
    
    # Bouton de soumission
    st.markdown("""
    <div style="background-color: rgba(255,255,255,0.7); padding: 15px; border-radius: 15px; margin-top: 30px; margin-bottom: 20px; text-align: center; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
        <p style="font-size: 1.1rem;">
            Vos r√©ponses nous aideront √† personnaliser les tests et recommandations.
        </p>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        if st.button("‚úÖ Continuer vers les tests", key="submit_questionnaire"):
            # Analyse rapide des r√©ponses pour sugg√©rer le test le plus appropri√©
            sphere_a_yes = sum(1 for q, data in st.session_state['questionnaire_responses']["sphereA"].items() if data["answer"] == "OUI")
            
            # Si plus de 2 "OUI" dans la sph√®re A, sugg√©rer test TDAH
            if sphere_a_yes >= 2:
                st.session_state['suggested_test'] = 'tdah'
            else:
                st.session_state['suggested_test'] = 'dyscalculie'  # par d√©faut
            
            # Rediriger vers la page d'accueil des tests
            st.session_state['page'] = 'test_selection'
            st.rerun()